worker_processes 1;
events {
    worker_connections 1024;
}

# Run as a less privileged user for security reasons.
user nginx nginx;

http {
    server_tokens off;

    access_log /var/log/nginx/access.log;

    upstream moo {
        server 127.0.0.1:8080;
    }

    server {
        listen          443 ssl;
        server_name     *.zombull.xyz;

        # Auto-generated by certbot
        ssl_certificate         /etc/letsencrypt/live/moon.zombull.xyz/fullchain.pem;
        ssl_certificate_key     /etc/letsencrypt/live/moon.zombull.xyz/privkey.pem;
        include                 /etc/letsencrypt/options-ssl-nginx.conf;
        ssl_dhparam             /etc/letsencrypt/ssl-dhparams.pem;

        gzip            on;

        # Compression level (1-9).
        # 5 is a perfect compromise between size and cpu usage, offering about
        # 75% reduction for most ascii files (almost identical to level 9).
        gzip_comp_level    5;

        # Don't compress anything that's already small and unlikely to shrink much
        # if at all (the default is 20 bytes, which is bad as that usually leads to
        # larger files after gzipping).
        gzip_min_length 200;

        # Compress data for all clients.
        gzip_proxied    any;

        # Compress all text responses.
        gzip_types      text/plain text/css text/xml text/javascript application/javascript application/json application/xml;

        # Tell proxies to cache both the gzipped and regular version of a resource
        # whenever the client's Accept-Encoding capabilities header varies;
        # Avoids the issue where a non-gzip capable client (which is extremely rare
        # today) would display gibberish if their proxy gave them the gzipped version.
        gzip_vary          on;

        location / {
            proxy_pass http://moo;
            proxy_set_header Host $host;
            access_log off;
        }
    }
}